# Problem: Minimize Malware Spread - https://leetcode.com/problems/minimize-malware-spread/

class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        n = len(graph)
        def dfs(node):
            infected.add(node)
            for nei in range(n):
                if graph[node][nei] == 1 and nei not in infected:
                    dfs(nei)
        min_infection = n
        inf_rate = dict()
        for removed in initial:
            infected = set()
            for node in initial:
                if node == removed:
                    continue
                dfs(node)
            num_infected = len(infected)
            inf_rate[removed] = num_infected
            min_infection = min(min_infection, num_infected)
        initial.sort()
        for node in initial:
            if inf_rate[node] == min_infection:
                return node

        # return min_infection